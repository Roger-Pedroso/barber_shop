// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Defina a variável de ambiente DATABASE_URL no seu .env
}

enum appointmentStatus {
  Finalizado
  Agendado
  Cancelado
}

enum days {
  Segunda
  Terca
  Quarta
  Quinta
  Sexta
  Sabado
  Domingo
}

enum role {
  Admin
  Barber
  Dev
  Owner
}

model BarberShop {
  id       Int       @id @default(autoincrement())
  name     String
  address  String
  fone     String
  imageUrl String?
  barbers  Barber[]
  services Service[]
}

model Barber {
  id       Int     @id @default(autoincrement())
  name     String
  fone     String
  Role     role    @default(Barber)
  email    String?
  imageUrl String?
  barberShop    BarberShop      @relation(fields: [barberShopId], references: [id])
  barberShopId  Int
  services      Service[]       @relation("BarberServices")
  Appointment   Appointment[]
  WorkSchedule WorkSchedule[]
  TimeOff TimeOff[]
}

model Service {
  id           Int           @id @default(autoincrement())
  name         String
  price        Float
  duration     Int // Duração em minutos
  active       Boolean @default(true)
  barberShop   BarberShop    @relation(fields: [barberShopId], references: [id])
  barberShopId Int
  barbers      Barber[]      @relation("BarberServices")
  appointments Appointment[] @relation("AppointmentServices")
}

model Appointment {
  id              Int               @id @default(autoincrement())
  appointmentDate DateTime
  clientName     String
  clientFone     String
  status          appointmentStatus @default(Agendado)
  barber          Barber            @relation(fields: [barberId], references: [id])
  barberId        Int
  services        Service[]         @relation("AppointmentServices")
}

model WorkSchedule {
  id          Int    @id @default(autoincrement())
  barberId    Int
  barber      Barber @relation(fields: [barberId], references: [id])
  dayOfWeek days
  startHour  String
  endHour    String
}

model TimeOff {
  id          Int    @id @default(autoincrement())
  barberId    Int
  barber      Barber @relation(fields: [barberId], references: [id])
  dayOfWeek days
  startHour  String
  endHour    String
}
